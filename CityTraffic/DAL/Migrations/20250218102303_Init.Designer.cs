// <auto-generated />
using CityTraffic.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityTraffic.DAL.Migrations
{
    [DbContext(typeof(CityTrafficDB))]
    [Migration("20250218102303_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("CityTraffic.Models.Entities.StoppointEntity", b =>
                {
                    b.Property<int>("StoppointId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT")
                        .HasColumnName("location");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("StoppointName")
                        .HasColumnType("TEXT");

                    b.HasKey("StoppointId")
                        .HasName("PK_Stoppoints");

                    b.ToTable("Stoppoints");
                });

            modelBuilder.Entity("CityTraffic.Models.Entities.TransportRouteEntity", b =>
                {
                    b.Property<string>("RouteId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RouteNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("RouteTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("RouteId")
                        .HasName("PK_TransportRoutes");

                    b.ToTable("TransportRoutes");
                });

            modelBuilder.Entity("StoppointEntityTransportRouteEntity", b =>
                {
                    b.Property<string>("RoutesRouteId")
                        .HasColumnType("TEXT");

                    b.Property<int>("StoppointsStoppointId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoutesRouteId", "StoppointsStoppointId");

                    b.HasIndex("StoppointsStoppointId");

                    b.ToTable("StoppointEntityTransportRouteEntity");
                });

            modelBuilder.Entity("StoppointEntityTransportRouteEntity", b =>
                {
                    b.HasOne("CityTraffic.Models.Entities.TransportRouteEntity", null)
                        .WithMany()
                        .HasForeignKey("RoutesRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CityTraffic.Models.Entities.StoppointEntity", null)
                        .WithMany()
                        .HasForeignKey("StoppointsStoppointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
